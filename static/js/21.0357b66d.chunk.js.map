{"version":3,"file":"static/js/21.0357b66d.chunk.js","mappings":"qQACA,GAAgB,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,uB,SCgElF,EA5DiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,OAAO,GAHS,IADC,mBAOMQ,EAAAA,EAAAA,IAAYL,GAPlB,gBAOTM,EAPS,EAOTA,KACRP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBT,MAAOW,EACPV,SAAS,GAHO,IARD,gDAcjBG,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAK,MAHW,IAdD,yDAAH,qDAqBlBM,GACD,GAAE,CAACH,IAEJ,IAEMO,EAFYT,EAAVH,MAEea,KACrB,YAAqD,IAAlDR,EAAiD,EAAjDA,GAAIS,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzBC,EAAY,yCAAqCD,GACvD,OACE,gBAAIE,UAAWC,EAAAA,KAAf,WACE,gBAAKD,UAAWC,EAAAA,IAAYC,IAAKH,EAAcI,IAAKP,KACpD,eAAGI,UAAWC,EAAAA,KAAd,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,mBADF,IAC8CL,MAE9C,eAAGI,UAAWC,EAAAA,KAAd,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,wBADF,IACmDJ,OANpBV,EAUpC,IAGH,OACE,+BACE,eAAIa,UAAWC,EAAAA,KAAf,SAA6BP,KAGlC,C,wLC7DKU,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,kCAGLC,EAAS,mCAEFC,EAAQ,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SAGZL,EAASM,IAAI,qBAAsB,CAC3CC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KANkB,uBAEZI,EAFY,EAEpBC,KAAQD,QAFY,kBASfA,GATe,2CAAH,qDAYRE,EAAY,mCAAG,WAAM5B,GAAN,yFACHiB,EAASM,IAAT,iBAAuBvB,GAAM,CAClDwB,OAAQ,CACNC,QAASL,KAHa,uBAClBO,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZE,EAAgB,mCAAG,WAAMC,GAAN,yFACPb,EAASM,IAAI,eAAgB,CAClDC,OAAQ,CACNC,QAASL,EACTU,MAAAA,KAJ0B,uBACtBH,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBtB,EAAW,mCAAG,WAAML,GAAN,yFACFiB,EAASM,IAAT,iBAAuBvB,EAAvB,YAAqC,CAC1DwB,OAAQ,CACNC,QAASL,KAHY,uBACjBO,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXI,EAAa,mCAAG,WAAM/B,GAAN,yFACJiB,EAASM,IAAT,iBAAuBvB,EAAvB,YAAqC,CAC1DwB,OAAQ,CACNC,QAASL,KAHc,uBACnBO,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/CastPage.module.css?d5ae","pages/CastPage/CastPage.jsx","shared/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastPage_list__ievSZ\",\"item\":\"CastPage_item__ycgBh\",\"img\":\"CastPage_img__DAvKf\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from '../../shared/api/api';\nimport styles from './CastPage.module.css';\n\nconst CastPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setState(prevState => ({\n        ...prevState,\n        loading: true,\n        error: false,\n      }));\n      try {\n        const { cast } = await getCastById(id);\n        setState(prevState => ({\n          ...prevState,\n          items: cast,\n          loading: false,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error,\n        }));\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const { items } = state;\n\n  const elements = items.map(\n    ({ id, original_name, character, profile_path }) => {\n      const profilePhoto = `https://image.tmdb.org/t/p/w200${profile_path}`;\n      return (\n        <li className={styles.item} key={id}>\n          <img className={styles.img} src={profilePhoto} alt={original_name} />\n          <p className={styles.text}>\n            <span className={styles.span}>Name:</span> {original_name}\n          </p>\n          <p className={styles.text}>\n            <span className={styles.span}>Character:</span> {character}\n          </p>\n        </li>\n      );\n    }\n  );\n\n  return (\n    <>\n      <ul className={styles.list}>{elements}</ul>\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst APIKEY = '90ff20d482691dd64f3226f1017ad871';\n\nexport const getMovie = async (page = 1) => {\n  const {\n    data: { results },\n  } = await instance.get('trending/movie/day', {\n    params: {\n      api_key: APIKEY,\n      page,\n    },\n  });\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      api_key: APIKEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const getRewiesById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n"],"names":["useState","items","loading","error","state","setState","id","useParams","useEffect","fetchReviews","prevState","getCastById","cast","elements","map","original_name","character","profile_path","profilePhoto","className","styles","src","alt","instance","axios","baseURL","APIKEY","getMovie","page","get","params","api_key","results","data","getMovieById","getMoviesByQuery","query","getRewiesById"],"sourceRoot":""}