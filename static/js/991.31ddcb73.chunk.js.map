{"version":3,"file":"static/js/991.31ddcb73.chunk.js","mappings":"8LACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAuF,yB,SCGjFA,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACzB,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CACED,UAAWC,EACXC,GAAE,iBAAYJ,GACdK,MAAO,CAAEC,KAAMV,GAHjB,SAKGK,KAN4BD,EADR,IAY3B,OAAO,eAAIE,UAAWC,EAAf,SAA6BL,GACrC,EAEDJ,EAAWa,aAAe,CACxBZ,MAAO,IAYT,O,oEClCA,MAAsB,sB,0GCmDtB,EA/CuB,WACrB,OAA0Ba,EAAAA,EAAAA,UAAS,CACjCb,MAAO,GACPc,SAAS,EACTC,MAAO,OAHT,eAAOL,EAAP,KAAcM,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,oGAExBF,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBL,SAAS,EACTC,OAAO,GAHS,IAFM,UAOFK,EAAAA,EAAAA,MAPE,OAOlBC,EAPkB,OAQxBL,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBnB,OAAM,OAAKqB,GACXP,SAAS,GAHO,IARM,gDAcxBE,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBL,SAAS,EACTC,MAAK,MAHW,IAdM,yBAoBxBC,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBL,SAAS,GAFO,IApBM,4EAAH,qDA0BzBI,GACD,GAAE,IAEH,IAAQJ,EAA0BJ,EAA1BI,QAASC,EAAiBL,EAAjBK,MAAOf,EAAUU,EAAVV,MACxB,OACE,gCACGc,IAAW,SAACQ,EAAA,EAAD,IACXP,IAAS,sDACTQ,QAAQvB,EAAMwB,UAAW,SAACzB,EAAA,EAAD,CAAYC,MAAOA,MAGlD,ECtCD,EATiB,WACf,OACE,iBAAKO,UAAWC,EAAhB,WACE,4CACA,SAAC,EAAD,MAGL,C,wLCRKiB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,kCAGLC,EAAS,mCAEFR,EAAQ,mCAAG,2GAAOS,EAAP,+BAAc,EAAd,SAGZJ,EAASK,IAAI,qBAAsB,CAC3CC,OAAQ,CACNC,QAASJ,EACTC,KAAAA,KANkB,uBAEZR,EAFY,EAEpBY,KAAQZ,QAFY,kBASfA,GATe,2CAAH,qDAYRa,EAAY,mCAAG,WAAM7B,GAAN,yFACHoB,EAASK,IAAT,iBAAuBzB,GAAM,CAClD0B,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZE,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAASK,IAAI,eAAgB,CAClDC,OAAQ,CACNC,QAASJ,EACTQ,MAAAA,KAJ0B,uBACtBH,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBI,EAAW,mCAAG,WAAMhC,GAAN,yFACFoB,EAASK,IAAT,iBAAuBzB,EAAvB,YAAqC,CAC1D0B,OAAQ,CACNC,QAASJ,KAHY,uBACjBK,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXK,EAAa,mCAAG,WAAMjC,GAAN,yFACJoB,EAASK,IAAT,iBAAuBzB,EAAvB,YAAqC,CAC1D0B,OAAQ,CACNC,QAASJ,KAHc,uBACnBK,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","components/TrandingMovies/TrandingMovies.jsx","pages/HomePage/HomePage.jsx","shared/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"link\":\"MoviesList_link__8rTGX\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <li className={styles.item} key={id}>\n      <Link\n        className={styles.link}\n        to={`/movie/${id}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nMoviesList.defaultProps = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"HomePage_div__ivH-n\"};","import { useState, useEffect } from 'react';\nimport { getMovie } from '../../shared/api/api';\nimport Loader from '../Loader';\nimport MoviesList from '../MoviesList';\n\nconst TrendingMovies = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: false,\n        }));\n        const results = await getMovie();\n        setState(prevState => ({\n          ...prevState,\n          items: [...results],\n          loading: false,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error,\n        }));\n      } finally {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n        }));\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  const { loading, error, items } = state;\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>Movie not found, try again</p>}\n      {Boolean(items.length) && <MoviesList items={items} />}\n    </>\n  );\n};\n\nexport default TrendingMovies;\n","import styles from './HomePage.module.css';\nimport TrendingMovies from '../../components/TrandingMovies';\n\nconst HomePage = () => {\n  return (\n    <div className={styles.div}>\n      <h2>Tranding today</h2>\n      <TrendingMovies />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst APIKEY = '90ff20d482691dd64f3226f1017ad871';\n\nexport const getMovie = async (page = 1) => {\n  const {\n    data: { results },\n  } = await instance.get('trending/movie/day', {\n    params: {\n      api_key: APIKEY,\n      page,\n    },\n  });\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      api_key: APIKEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const getRewiesById = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","className","styles","to","state","from","defaultProps","useState","loading","error","setState","useEffect","fetchTrendingMovies","prevState","getMovie","results","Loader","Boolean","length","instance","axios","baseURL","APIKEY","page","get","params","api_key","data","getMovieById","getMoviesByQuery","query","getCastById","getRewiesById"],"sourceRoot":""}